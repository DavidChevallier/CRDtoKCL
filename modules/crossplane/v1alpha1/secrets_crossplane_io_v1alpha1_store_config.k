"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema StoreConfig:
    """
    A StoreConfig configures how Crossplane controllers should store connection
    details in an external secret store.

    Attributes
    ----------
    apiVersion : str, default is "secrets.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "StoreConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SecretsCrossplaneIoV1alpha1StoreConfigSpec, default is Undefined, required
        spec
    """


    apiVersion: "secrets.crossplane.io/v1alpha1" = "secrets.crossplane.io/v1alpha1"

    kind: "StoreConfig" = "StoreConfig"

    metadata?: v1.ObjectMeta

    spec: SecretsCrossplaneIoV1alpha1StoreConfigSpec


schema SecretsCrossplaneIoV1alpha1StoreConfigSpec:
    """
    A StoreConfigSpec defines the desired state of a StoreConfig.

    Attributes
    ----------
    defaultScope : str, default is Undefined, required
        DefaultScope used for scoping secrets for "cluster-scoped" resources.
        If store type is "Kubernetes", this would mean the default namespace to
        store connection secrets for cluster scoped resources.
        In case of "Vault", this would be used as the default parent path.
        Typically, should be set as Crossplane installation namespace.
    kubernetes : SecretsCrossplaneIoV1alpha1StoreConfigSpecKubernetes, default is Undefined, optional
        kubernetes
    plugin : SecretsCrossplaneIoV1alpha1StoreConfigSpecPlugin, default is Undefined, optional
        plugin
    $type : str, default is "Kubernetes", optional
        Type configures which secret store to be used. Only the configuration
        block for this store will be used and others will be ignored if provided.
        Default is Kubernetes.
    """


    defaultScope: str

    kubernetes?: SecretsCrossplaneIoV1alpha1StoreConfigSpecKubernetes

    plugin?: SecretsCrossplaneIoV1alpha1StoreConfigSpecPlugin

    $type?: "Kubernetes" | "Vault" | "Plugin" = "Kubernetes"


schema SecretsCrossplaneIoV1alpha1StoreConfigSpecKubernetes:
    """
    Kubernetes configures a Kubernetes secret store.
    If the "type" is "Kubernetes" but no config provided, in cluster config
    will be used.

    Attributes
    ----------
    auth : SecretsCrossplaneIoV1alpha1StoreConfigSpecKubernetesAuth, default is Undefined, required
        auth
    """


    auth: SecretsCrossplaneIoV1alpha1StoreConfigSpecKubernetesAuth


schema SecretsCrossplaneIoV1alpha1StoreConfigSpecKubernetesAuth:
    """
    Credentials used to connect to the Kubernetes API.

    Attributes
    ----------
    env : SecretsCrossplaneIoV1alpha1StoreConfigSpecKubernetesAuthEnv, default is Undefined, optional
        env
    fs : SecretsCrossplaneIoV1alpha1StoreConfigSpecKubernetesAuthFs, default is Undefined, optional
        fs
    secretRef : SecretsCrossplaneIoV1alpha1StoreConfigSpecKubernetesAuthSecretRef, default is Undefined, optional
        secret ref
    source : str, default is Undefined, required
        Source of the credentials.
    """


    env?: SecretsCrossplaneIoV1alpha1StoreConfigSpecKubernetesAuthEnv

    fs?: SecretsCrossplaneIoV1alpha1StoreConfigSpecKubernetesAuthFs

    secretRef?: SecretsCrossplaneIoV1alpha1StoreConfigSpecKubernetesAuthSecretRef

    source: "None" | "Secret" | "Environment" | "Filesystem"


schema SecretsCrossplaneIoV1alpha1StoreConfigSpecKubernetesAuthEnv:
    """
    Env is a reference to an environment variable that contains credentials
    that must be used to connect to the provider.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of an environment variable.
    """


    name: str


schema SecretsCrossplaneIoV1alpha1StoreConfigSpecKubernetesAuthFs:
    """
    Fs is a reference to a filesystem location that contains credentials that
    must be used to connect to the provider.

    Attributes
    ----------
    path : str, default is Undefined, required
        Path is a filesystem path.
    """


    path: str


schema SecretsCrossplaneIoV1alpha1StoreConfigSpecKubernetesAuthSecretRef:
    """
    A SecretRef is a reference to a secret key that contains the credentials
    that must be used to connect to the provider.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema SecretsCrossplaneIoV1alpha1StoreConfigSpecPlugin:
    """
    Plugin configures External secret store as a plugin.

    Attributes
    ----------
    configRef : SecretsCrossplaneIoV1alpha1StoreConfigSpecPluginConfigRef, default is Undefined, optional
        config ref
    endpoint : str, default is Undefined, optional
        Endpoint is the endpoint of the gRPC server.
    """


    configRef?: SecretsCrossplaneIoV1alpha1StoreConfigSpecPluginConfigRef

    endpoint?: str


schema SecretsCrossplaneIoV1alpha1StoreConfigSpecPluginConfigRef:
    """
    ConfigRef contains store config reference info.

    Attributes
    ----------
    apiVersion : str, default is Undefined, required
        APIVersion of the referenced config.
    kind : str, default is Undefined, required
        Kind of the referenced config.
    name : str, default is Undefined, required
        Name of the referenced config.
    """


    apiVersion: str

    kind: str

    name: str


