"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Middleware:
    """
    Middleware is the CRD implementation of a Traefik Middleware.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/overview/

    Attributes
    ----------
    apiVersion : str, default is "traefik.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Middleware", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, required
        metadata
    spec : TraefikIoV1alpha1MiddlewareSpec, default is Undefined, required
        spec
    """


    apiVersion: "traefik.io/v1alpha1" = "traefik.io/v1alpha1"

    kind: "Middleware" = "Middleware"

    metadata: v1.ObjectMeta

    spec: TraefikIoV1alpha1MiddlewareSpec


schema TraefikIoV1alpha1MiddlewareSpec:
    """
    MiddlewareSpec defines the desired state of a Middleware.

    Attributes
    ----------
    addPrefix : TraefikIoV1alpha1MiddlewareSpecAddPrefix, default is Undefined, optional
        add prefix
    basicAuth : TraefikIoV1alpha1MiddlewareSpecBasicAuth, default is Undefined, optional
        basic auth
    buffering : TraefikIoV1alpha1MiddlewareSpecBuffering, default is Undefined, optional
        buffering
    chain : TraefikIoV1alpha1MiddlewareSpecChain, default is Undefined, optional
        chain
    circuitBreaker : TraefikIoV1alpha1MiddlewareSpecCircuitBreaker, default is Undefined, optional
        circuit breaker
    compress : TraefikIoV1alpha1MiddlewareSpecCompress, default is Undefined, optional
        compress
    contentType : TraefikIoV1alpha1MiddlewareSpecContentType, default is Undefined, optional
        content type
    digestAuth : TraefikIoV1alpha1MiddlewareSpecDigestAuth, default is Undefined, optional
        digest auth
    errors : TraefikIoV1alpha1MiddlewareSpecErrors, default is Undefined, optional
        errors
    forwardAuth : TraefikIoV1alpha1MiddlewareSpecForwardAuth, default is Undefined, optional
        forward auth
    grpcWeb : TraefikIoV1alpha1MiddlewareSpecGrpcWeb, default is Undefined, optional
        grpc web
    headers : TraefikIoV1alpha1MiddlewareSpecHeaders, default is Undefined, optional
        headers
    inFlightReq : TraefikIoV1alpha1MiddlewareSpecInFlightReq, default is Undefined, optional
        in flight req
    ipAllowList : TraefikIoV1alpha1MiddlewareSpecIPAllowList, default is Undefined, optional
        ip allow list
    ipWhiteList : TraefikIoV1alpha1MiddlewareSpecIPWhiteList, default is Undefined, optional
        ip white list
    passTLSClientCert : TraefikIoV1alpha1MiddlewareSpecPassTLSClientCert, default is Undefined, optional
        pass TLS client cert
    plugin : {str:any}, default is Undefined, optional
        Plugin defines the middleware plugin configuration.
        More info: https://doc.traefik.io/traefik/plugins/
    rateLimit : TraefikIoV1alpha1MiddlewareSpecRateLimit, default is Undefined, optional
        rate limit
    redirectRegex : TraefikIoV1alpha1MiddlewareSpecRedirectRegex, default is Undefined, optional
        redirect regex
    redirectScheme : TraefikIoV1alpha1MiddlewareSpecRedirectScheme, default is Undefined, optional
        redirect scheme
    replacePath : TraefikIoV1alpha1MiddlewareSpecReplacePath, default is Undefined, optional
        replace path
    replacePathRegex : TraefikIoV1alpha1MiddlewareSpecReplacePathRegex, default is Undefined, optional
        replace path regex
    retry : TraefikIoV1alpha1MiddlewareSpecRetry, default is Undefined, optional
        retry
    stripPrefix : TraefikIoV1alpha1MiddlewareSpecStripPrefix, default is Undefined, optional
        strip prefix
    stripPrefixRegex : TraefikIoV1alpha1MiddlewareSpecStripPrefixRegex, default is Undefined, optional
        strip prefix regex
    """


    addPrefix?: TraefikIoV1alpha1MiddlewareSpecAddPrefix

    basicAuth?: TraefikIoV1alpha1MiddlewareSpecBasicAuth

    buffering?: TraefikIoV1alpha1MiddlewareSpecBuffering

    chain?: TraefikIoV1alpha1MiddlewareSpecChain

    circuitBreaker?: TraefikIoV1alpha1MiddlewareSpecCircuitBreaker

    compress?: TraefikIoV1alpha1MiddlewareSpecCompress

    contentType?: TraefikIoV1alpha1MiddlewareSpecContentType

    digestAuth?: TraefikIoV1alpha1MiddlewareSpecDigestAuth

    errors?: TraefikIoV1alpha1MiddlewareSpecErrors

    forwardAuth?: TraefikIoV1alpha1MiddlewareSpecForwardAuth

    grpcWeb?: TraefikIoV1alpha1MiddlewareSpecGrpcWeb

    headers?: TraefikIoV1alpha1MiddlewareSpecHeaders

    inFlightReq?: TraefikIoV1alpha1MiddlewareSpecInFlightReq

    ipAllowList?: TraefikIoV1alpha1MiddlewareSpecIPAllowList

    ipWhiteList?: TraefikIoV1alpha1MiddlewareSpecIPWhiteList

    passTLSClientCert?: TraefikIoV1alpha1MiddlewareSpecPassTLSClientCert

    plugin?: {str:any}

    rateLimit?: TraefikIoV1alpha1MiddlewareSpecRateLimit

    redirectRegex?: TraefikIoV1alpha1MiddlewareSpecRedirectRegex

    redirectScheme?: TraefikIoV1alpha1MiddlewareSpecRedirectScheme

    replacePath?: TraefikIoV1alpha1MiddlewareSpecReplacePath

    replacePathRegex?: TraefikIoV1alpha1MiddlewareSpecReplacePathRegex

    retry?: TraefikIoV1alpha1MiddlewareSpecRetry

    stripPrefix?: TraefikIoV1alpha1MiddlewareSpecStripPrefix

    stripPrefixRegex?: TraefikIoV1alpha1MiddlewareSpecStripPrefixRegex


schema TraefikIoV1alpha1MiddlewareSpecAddPrefix:
    """
    AddPrefix holds the add prefix middleware configuration.
    This middleware updates the path of a request before forwarding it.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/addprefix/

    Attributes
    ----------
    prefix : str, default is Undefined, optional
        Prefix is the string to add before the current path in the requested URL.
        It should include a leading slash (/).
    """


    prefix?: str


schema TraefikIoV1alpha1MiddlewareSpecBasicAuth:
    """
    BasicAuth holds the basic auth middleware configuration.
    This middleware restricts access to your services to known users.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/basicauth/

    Attributes
    ----------
    headerField : str, default is Undefined, optional
        HeaderField defines a header field to store the authenticated user.
        More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/basicauth/#headerfield
    realm : str, default is Undefined, optional
        Realm allows the protected resources on a server to be partitioned into a set of protection spaces, each with its own authentication scheme.
        Default: traefik.
    removeHeader : bool, default is Undefined, optional
        RemoveHeader sets the removeHeader option to true to remove the authorization header before forwarding the request to your service.
        Default: false.
    secret : str, default is Undefined, optional
        Secret is the name of the referenced Kubernetes Secret containing user credentials.
    """


    headerField?: str

    realm?: str

    removeHeader?: bool

    secret?: str


schema TraefikIoV1alpha1MiddlewareSpecBuffering:
    """
    Buffering holds the buffering middleware configuration.
    This middleware retries or limits the size of requests that can be forwarded to backends.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/buffering/#maxrequestbodybytes

    Attributes
    ----------
    maxRequestBodyBytes : int, default is Undefined, optional
        MaxRequestBodyBytes defines the maximum allowed body size for the request (in bytes).
        If the request exceeds the allowed size, it is not forwarded to the service, and the client gets a 413 (Request Entity Too Large) response.
        Default: 0 (no maximum).
    maxResponseBodyBytes : int, default is Undefined, optional
        MaxResponseBodyBytes defines the maximum allowed response size from the service (in bytes).
        If the response exceeds the allowed size, it is not forwarded to the client. The client gets a 500 (Internal Server Error) response instead.
        Default: 0 (no maximum).
    memRequestBodyBytes : int, default is Undefined, optional
        MemRequestBodyBytes defines the threshold (in bytes) from which the request will be buffered on disk instead of in memory.
        Default: 1048576 (1Mi).
    memResponseBodyBytes : int, default is Undefined, optional
        MemResponseBodyBytes defines the threshold (in bytes) from which the response will be buffered on disk instead of in memory.
        Default: 1048576 (1Mi).
    retryExpression : str, default is Undefined, optional
        RetryExpression defines the retry conditions.
        It is a logical combination of functions with operators AND (&&) and OR (||).
        More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/buffering/#retryexpression
    """


    maxRequestBodyBytes?: int

    maxResponseBodyBytes?: int

    memRequestBodyBytes?: int

    memResponseBodyBytes?: int

    retryExpression?: str


schema TraefikIoV1alpha1MiddlewareSpecChain:
    """
    Chain holds the configuration of the chain middleware.
    This middleware enables to define reusable combinations of other pieces of middleware.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/chain/

    Attributes
    ----------
    middlewares : [TraefikIoV1alpha1MiddlewareSpecChainMiddlewaresItems0], default is Undefined, optional
        Middlewares is the list of MiddlewareRef which composes the chain.
    """


    middlewares?: [TraefikIoV1alpha1MiddlewareSpecChainMiddlewaresItems0]


schema TraefikIoV1alpha1MiddlewareSpecChainMiddlewaresItems0:
    """
    MiddlewareRef is a reference to a Middleware resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name defines the name of the referenced Middleware resource.
    namespace : str, default is Undefined, optional
        Namespace defines the namespace of the referenced Middleware resource.
    """


    name: str

    namespace?: str


schema TraefikIoV1alpha1MiddlewareSpecCircuitBreaker:
    """
    CircuitBreaker holds the circuit breaker configuration.

    Attributes
    ----------
    checkPeriod : int | str, default is Undefined, optional
        CheckPeriod is the interval between successive checks of the circuit breaker condition (when in standby state).
    expression : str, default is Undefined, optional
        Expression is the condition that triggers the tripped state.
    fallbackDuration : int | str, default is Undefined, optional
        FallbackDuration is the duration for which the circuit breaker will wait before trying to recover (from a tripped state).
    recoveryDuration : int | str, default is Undefined, optional
        RecoveryDuration is the duration for which the circuit breaker will try to recover (as soon as it is in recovering state).
    responseCode : int, default is Undefined, optional
        ResponseCode is the status code that the circuit breaker will return while it is in the open state.
    """


    checkPeriod?: int | str

    expression?: str

    fallbackDuration?: int | str

    recoveryDuration?: int | str

    responseCode?: int


schema TraefikIoV1alpha1MiddlewareSpecCompress:
    """
    Compress holds the compress middleware configuration.
    This middleware compresses responses before sending them to the client, using gzip compression.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/compress/

    Attributes
    ----------
    defaultEncoding : str, default is Undefined, optional
        DefaultEncoding specifies the default encoding if the `Accept-Encoding` header is not in the request or contains a wildcard (`*`).
    excludedContentTypes : [str], default is Undefined, optional
        ExcludedContentTypes defines the list of content types to compare the Content-Type header of the incoming requests and responses before compressing.
        `application/grpc` is always excluded.
    includedContentTypes : [str], default is Undefined, optional
        IncludedContentTypes defines the list of content types to compare the Content-Type header of the responses before compressing.
    minResponseBodyBytes : int, default is Undefined, optional
        MinResponseBodyBytes defines the minimum amount of bytes a response body must have to be compressed.
        Default: 1024.
    """


    defaultEncoding?: str

    excludedContentTypes?: [str]

    includedContentTypes?: [str]

    minResponseBodyBytes?: int


schema TraefikIoV1alpha1MiddlewareSpecContentType:
    """
    ContentType holds the content-type middleware configuration.
    This middleware exists to enable the correct behavior until at least the default one can be changed in a future version.

    Attributes
    ----------
    autoDetect : bool, default is Undefined, optional
        AutoDetect specifies whether to let the `Content-Type` header, if it has not been set by the backend,
        be automatically set to a value derived from the contents of the response.
        Deprecated: AutoDetect option is deprecated, Content-Type middleware is only meant to be used to enable the content-type detection, please remove any usage of this option.
    """


    autoDetect?: bool


schema TraefikIoV1alpha1MiddlewareSpecDigestAuth:
    """
    DigestAuth holds the digest auth middleware configuration.
    This middleware restricts access to your services to known users.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/digestauth/

    Attributes
    ----------
    headerField : str, default is Undefined, optional
        HeaderField defines a header field to store the authenticated user.
        More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/basicauth/#headerfield
    realm : str, default is Undefined, optional
        Realm allows the protected resources on a server to be partitioned into a set of protection spaces, each with its own authentication scheme.
        Default: traefik.
    removeHeader : bool, default is Undefined, optional
        RemoveHeader defines whether to remove the authorization header before forwarding the request to the backend.
    secret : str, default is Undefined, optional
        Secret is the name of the referenced Kubernetes Secret containing user credentials.
    """


    headerField?: str

    realm?: str

    removeHeader?: bool

    secret?: str


schema TraefikIoV1alpha1MiddlewareSpecErrors:
    """
    ErrorPage holds the custom error middleware configuration.
    This middleware returns a custom page in lieu of the default, according to configured ranges of HTTP Status codes.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/errorpages/

    Attributes
    ----------
    query : str, default is Undefined, optional
        Query defines the URL for the error page (hosted by service).
        The {status} variable can be used in order to insert the status code in the URL.
    service : TraefikIoV1alpha1MiddlewareSpecErrorsService, default is Undefined, optional
        service
    status : [str], default is Undefined, optional
        Status defines which status or range of statuses should result in an error page.
        It can be either a status code as a number (500),
        as multiple comma-separated numbers (500,502),
        as ranges by separating two codes with a dash (500-599),
        or a combination of the two (404,418,500-599).
    """


    query?: str

    service?: TraefikIoV1alpha1MiddlewareSpecErrorsService

    status?: [str]


schema TraefikIoV1alpha1MiddlewareSpecErrorsService:
    """
    Service defines the reference to a Kubernetes Service that will serve the error page.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/errorpages/#service

    Attributes
    ----------
    healthCheck : TraefikIoV1alpha1MiddlewareSpecErrorsServiceHealthCheck, default is Undefined, optional
        health check
    kind : str, default is Undefined, optional
        Kind defines the kind of the Service.
    name : str, default is Undefined, required
        Name defines the name of the referenced Kubernetes Service or TraefikService.
        The differentiation between the two is specified in the Kind field.
    namespace : str, default is Undefined, optional
        Namespace defines the namespace of the referenced Kubernetes Service or TraefikService.
    nativeLB : bool, default is Undefined, optional
        NativeLB controls, when creating the load-balancer,
        whether the LB's children are directly the pods IPs or if the only child is the Kubernetes Service clusterIP.
        The Kubernetes Service itself does load-balance to the pods.
        By default, NativeLB is false.
    nodePortLB : bool, default is Undefined, optional
        NodePortLB controls, when creating the load-balancer,
        whether the LB's children are directly the nodes internal IPs using the nodePort when the service type is NodePort.
        It allows services to be reachable when Traefik runs externally from the Kubernetes cluster but within the same network of the nodes.
        By default, NodePortLB is false.
    passHostHeader : bool, default is Undefined, optional
        PassHostHeader defines whether the client Host header is forwarded to the upstream Kubernetes Service.
        By default, passHostHeader is true.
    port : int | str, default is Undefined, optional
        Port defines the port of a Kubernetes Service.
        This can be a reference to a named port.
    responseForwarding : TraefikIoV1alpha1MiddlewareSpecErrorsServiceResponseForwarding, default is Undefined, optional
        response forwarding
    scheme : str, default is Undefined, optional
        Scheme defines the scheme to use for the request to the upstream Kubernetes Service.
        It defaults to https when Kubernetes Service port is 443, http otherwise.
    serversTransport : str, default is Undefined, optional
        ServersTransport defines the name of ServersTransport resource to use.
        It allows to configure the transport between Traefik and your servers.
        Can only be used on a Kubernetes Service.
    sticky : TraefikIoV1alpha1MiddlewareSpecErrorsServiceSticky, default is Undefined, optional
        sticky
    strategy : str, default is Undefined, optional
        Strategy defines the load balancing strategy between the servers.
        RoundRobin is the only supported value at the moment.
    weight : int, default is Undefined, optional
        Weight defines the weight and should only be specified when Name references a TraefikService object
        (and to be precise, one that embeds a Weighted Round Robin).
    """


    healthCheck?: TraefikIoV1alpha1MiddlewareSpecErrorsServiceHealthCheck

    kind?: "Service" | "TraefikService"

    name: str

    namespace?: str

    nativeLB?: bool

    nodePortLB?: bool

    passHostHeader?: bool

    port?: int | str

    responseForwarding?: TraefikIoV1alpha1MiddlewareSpecErrorsServiceResponseForwarding

    scheme?: str

    serversTransport?: str

    sticky?: TraefikIoV1alpha1MiddlewareSpecErrorsServiceSticky

    strategy?: str

    weight?: int


schema TraefikIoV1alpha1MiddlewareSpecErrorsServiceHealthCheck:
    """
    Healthcheck defines health checks for ExternalName services.

    Attributes
    ----------
    followRedirects : bool, default is Undefined, optional
        FollowRedirects defines whether redirects should be followed during the health check calls.
        Default: true
    headers : {str:str}, default is Undefined, optional
        Headers defines custom headers to be sent to the health check endpoint.
    hostname : str, default is Undefined, optional
        Hostname defines the value of hostname in the Host header of the health check request.
    interval : int | str, default is Undefined, optional
        Interval defines the frequency of the health check calls.
        Default: 30s
    method : str, default is Undefined, optional
        Method defines the healthcheck method.
    mode : str, default is Undefined, optional
        Mode defines the health check mode.
        If defined to grpc, will use the gRPC health check protocol to probe the server.
        Default: http
    path : str, default is Undefined, optional
        Path defines the server URL path for the health check endpoint.
    port : int, default is Undefined, optional
        Port defines the server URL port for the health check endpoint.
    scheme : str, default is Undefined, optional
        Scheme replaces the server URL scheme for the health check endpoint.
    status : int, default is Undefined, optional
        Status defines the expected HTTP status code of the response to the health check request.
    timeout : int | str, default is Undefined, optional
        Timeout defines the maximum duration Traefik will wait for a health check request before considering the server unhealthy.
        Default: 5s
    """


    followRedirects?: bool

    headers?: {str:str}

    hostname?: str

    interval?: int | str

    method?: str

    mode?: str

    path?: str

    port?: int

    scheme?: str

    status?: int

    timeout?: int | str


schema TraefikIoV1alpha1MiddlewareSpecErrorsServiceResponseForwarding:
    """
    ResponseForwarding defines how Traefik forwards the response from the upstream Kubernetes Service to the client.

    Attributes
    ----------
    flushInterval : str, default is Undefined, optional
        FlushInterval defines the interval, in milliseconds, in between flushes to the client while copying the response body.
        A negative value means to flush immediately after each write to the client.
        This configuration is ignored when ReverseProxy recognizes a response as a streaming response;
        for such responses, writes are flushed to the client immediately.
        Default: 100ms
    """


    flushInterval?: str


schema TraefikIoV1alpha1MiddlewareSpecErrorsServiceSticky:
    """
    Sticky defines the sticky sessions configuration.
    More info: https://doc.traefik.io/traefik/v3.0/routing/services/#sticky-sessions

    Attributes
    ----------
    cookie : TraefikIoV1alpha1MiddlewareSpecErrorsServiceStickyCookie, default is Undefined, optional
        cookie
    """


    cookie?: TraefikIoV1alpha1MiddlewareSpecErrorsServiceStickyCookie


schema TraefikIoV1alpha1MiddlewareSpecErrorsServiceStickyCookie:
    """
    Cookie defines the sticky cookie configuration.

    Attributes
    ----------
    httpOnly : bool, default is Undefined, optional
        HTTPOnly defines whether the cookie can be accessed by client-side APIs, such as JavaScript.
    maxAge : int, default is Undefined, optional
        MaxAge indicates the number of seconds until the cookie expires.
        When set to a negative number, the cookie expires immediately.
        When set to zero, the cookie never expires.
    name : str, default is Undefined, optional
        Name defines the Cookie name.
    sameSite : str, default is Undefined, optional
        SameSite defines the same site policy.
        More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite
    secure : bool, default is Undefined, optional
        Secure defines whether the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).
    """


    httpOnly?: bool

    maxAge?: int

    name?: str

    sameSite?: str

    secure?: bool


schema TraefikIoV1alpha1MiddlewareSpecForwardAuth:
    """
    ForwardAuth holds the forward auth middleware configuration.
    This middleware delegates the request authentication to a Service.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/forwardauth/

    Attributes
    ----------
    addAuthCookiesToResponse : [str], default is Undefined, optional
        AddAuthCookiesToResponse defines the list of cookies to copy from the authentication server response to the response.
    address : str, default is Undefined, optional
        Address defines the authentication server address.
    authRequestHeaders : [str], default is Undefined, optional
        AuthRequestHeaders defines the list of the headers to copy from the request to the authentication server.
        If not set or empty then all request headers are passed.
    authResponseHeaders : [str], default is Undefined, optional
        AuthResponseHeaders defines the list of headers to copy from the authentication server response and set on forwarded request, replacing any existing conflicting headers.
    authResponseHeadersRegex : str, default is Undefined, optional
        AuthResponseHeadersRegex defines the regex to match headers to copy from the authentication server response and set on forwarded request, after stripping all headers that match the regex.
        More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/forwardauth/#authresponseheadersregex
    tls : TraefikIoV1alpha1MiddlewareSpecForwardAuthTLS, default is Undefined, optional
        tls
    trustForwardHeader : bool, default is Undefined, optional
        TrustForwardHeader defines whether to trust (ie: forward) all X-Forwarded-* headers.
    """


    addAuthCookiesToResponse?: [str]

    address?: str

    authRequestHeaders?: [str]

    authResponseHeaders?: [str]

    authResponseHeadersRegex?: str

    tls?: TraefikIoV1alpha1MiddlewareSpecForwardAuthTLS

    trustForwardHeader?: bool


schema TraefikIoV1alpha1MiddlewareSpecForwardAuthTLS:
    """
    TLS defines the configuration used to secure the connection to the authentication server.

    Attributes
    ----------
    caOptional : bool, default is Undefined, optional
        Deprecated: TLS client authentication is a server side option (see https://github.com/golang/go/blob/740a490f71d026bb7d2d13cb8fa2d6d6e0572b70/src/crypto/tls/common.go#L634).
    caSecret : str, default is Undefined, optional
        CASecret is the name of the referenced Kubernetes Secret containing the CA to validate the server certificate.
        The CA certificate is extracted from key `tls.ca` or `ca.crt`.
    certSecret : str, default is Undefined, optional
        CertSecret is the name of the referenced Kubernetes Secret containing the client certificate.
        The client certificate is extracted from the keys `tls.crt` and `tls.key`.
    insecureSkipVerify : bool, default is Undefined, optional
        InsecureSkipVerify defines whether the server certificates should be validated.
    """


    caOptional?: bool

    caSecret?: str

    certSecret?: str

    insecureSkipVerify?: bool


schema TraefikIoV1alpha1MiddlewareSpecGrpcWeb:
    """
    GrpcWeb holds the gRPC web middleware configuration.
    This middleware converts a gRPC web request to an HTTP/2 gRPC request.

    Attributes
    ----------
    allowOrigins : [str], default is Undefined, optional
        AllowOrigins is a list of allowable origins.
        Can also be a wildcard origin "*".
    """


    allowOrigins?: [str]


schema TraefikIoV1alpha1MiddlewareSpecHeaders:
    """
    Headers holds the headers middleware configuration.
    This middleware manages the requests and responses headers.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/headers/#customrequestheaders

    Attributes
    ----------
    accessControlAllowCredentials : bool, default is Undefined, optional
        AccessControlAllowCredentials defines whether the request can include user credentials.
    accessControlAllowHeaders : [str], default is Undefined, optional
        AccessControlAllowHeaders defines the Access-Control-Request-Headers values sent in preflight response.
    accessControlAllowMethods : [str], default is Undefined, optional
        AccessControlAllowMethods defines the Access-Control-Request-Method values sent in preflight response.
    accessControlAllowOriginList : [str], default is Undefined, optional
        AccessControlAllowOriginList is a list of allowable origins. Can also be a wildcard origin "*".
    accessControlAllowOriginListRegex : [str], default is Undefined, optional
        AccessControlAllowOriginListRegex is a list of allowable origins written following the Regular Expression syntax (https://golang.org/pkg/regexp/).
    accessControlExposeHeaders : [str], default is Undefined, optional
        AccessControlExposeHeaders defines the Access-Control-Expose-Headers values sent in preflight response.
    accessControlMaxAge : int, default is Undefined, optional
        AccessControlMaxAge defines the time that a preflight request may be cached.
    addVaryHeader : bool, default is Undefined, optional
        AddVaryHeader defines whether the Vary header is automatically added/updated when the AccessControlAllowOriginList is set.
    allowedHosts : [str], default is Undefined, optional
        AllowedHosts defines the fully qualified list of allowed domain names.
    browserXssFilter : bool, default is Undefined, optional
        BrowserXSSFilter defines whether to add the X-XSS-Protection header with the value 1; mode=block.
    contentSecurityPolicy : str, default is Undefined, optional
        ContentSecurityPolicy defines the Content-Security-Policy header value.
    contentSecurityPolicyReportOnly : str, default is Undefined, optional
        ContentSecurityPolicyReportOnly defines the Content-Security-Policy-Report-Only header value.
    contentTypeNosniff : bool, default is Undefined, optional
        ContentTypeNosniff defines whether to add the X-Content-Type-Options header with the nosniff value.
    customBrowserXSSValue : str, default is Undefined, optional
        CustomBrowserXSSValue defines the X-XSS-Protection header value.
        This overrides the BrowserXssFilter option.
    customFrameOptionsValue : str, default is Undefined, optional
        CustomFrameOptionsValue defines the X-Frame-Options header value.
        This overrides the FrameDeny option.
    customRequestHeaders : {str:str}, default is Undefined, optional
        CustomRequestHeaders defines the header names and values to apply to the request.
    customResponseHeaders : {str:str}, default is Undefined, optional
        CustomResponseHeaders defines the header names and values to apply to the response.
    featurePolicy : str, default is Undefined, optional
        Deprecated: FeaturePolicy option is deprecated, please use PermissionsPolicy instead.
    forceSTSHeader : bool, default is Undefined, optional
        ForceSTSHeader defines whether to add the STS header even when the connection is HTTP.
    frameDeny : bool, default is Undefined, optional
        FrameDeny defines whether to add the X-Frame-Options header with the DENY value.
    hostsProxyHeaders : [str], default is Undefined, optional
        HostsProxyHeaders defines the header keys that may hold a proxied hostname value for the request.
    isDevelopment : bool, default is Undefined, optional
        IsDevelopment defines whether to mitigate the unwanted effects of the AllowedHosts, SSL, and STS options when developing.
        Usually testing takes place using HTTP, not HTTPS, and on localhost, not your production domain.
        If you would like your development environment to mimic production with complete Host blocking, SSL redirects,
        and STS headers, leave this as false.
    permissionsPolicy : str, default is Undefined, optional
        PermissionsPolicy defines the Permissions-Policy header value.
        This allows sites to control browser features.
    publicKey : str, default is Undefined, optional
        PublicKey is the public key that implements HPKP to prevent MITM attacks with forged certificates.
    referrerPolicy : str, default is Undefined, optional
        ReferrerPolicy defines the Referrer-Policy header value.
        This allows sites to control whether browsers forward the Referer header to other sites.
    sslForceHost : bool, default is Undefined, optional
        Deprecated: SSLForceHost option is deprecated, please use RedirectRegex instead.
    sslHost : str, default is Undefined, optional
        Deprecated: SSLHost option is deprecated, please use RedirectRegex instead.
    sslProxyHeaders : {str:str}, default is Undefined, optional
        SSLProxyHeaders defines the header keys with associated values that would indicate a valid HTTPS request.
        It can be useful when using other proxies (example: "X-Forwarded-Proto": "https").
    sslRedirect : bool, default is Undefined, optional
        Deprecated: SSLRedirect option is deprecated, please use EntryPoint redirection or RedirectScheme instead.
    sslTemporaryRedirect : bool, default is Undefined, optional
        Deprecated: SSLTemporaryRedirect option is deprecated, please use EntryPoint redirection or RedirectScheme instead.
    stsIncludeSubdomains : bool, default is Undefined, optional
        STSIncludeSubdomains defines whether the includeSubDomains directive is appended to the Strict-Transport-Security header.
    stsPreload : bool, default is Undefined, optional
        STSPreload defines whether the preload flag is appended to the Strict-Transport-Security header.
    stsSeconds : int, default is Undefined, optional
        STSSeconds defines the max-age of the Strict-Transport-Security header.
        If set to 0, the header is not set.
    """


    accessControlAllowCredentials?: bool

    accessControlAllowHeaders?: [str]

    accessControlAllowMethods?: [str]

    accessControlAllowOriginList?: [str]

    accessControlAllowOriginListRegex?: [str]

    accessControlExposeHeaders?: [str]

    accessControlMaxAge?: int

    addVaryHeader?: bool

    allowedHosts?: [str]

    browserXssFilter?: bool

    contentSecurityPolicy?: str

    contentSecurityPolicyReportOnly?: str

    contentTypeNosniff?: bool

    customBrowserXSSValue?: str

    customFrameOptionsValue?: str

    customRequestHeaders?: {str:str}

    customResponseHeaders?: {str:str}

    featurePolicy?: str

    forceSTSHeader?: bool

    frameDeny?: bool

    hostsProxyHeaders?: [str]

    isDevelopment?: bool

    permissionsPolicy?: str

    publicKey?: str

    referrerPolicy?: str

    sslForceHost?: bool

    sslHost?: str

    sslProxyHeaders?: {str:str}

    sslRedirect?: bool

    sslTemporaryRedirect?: bool

    stsIncludeSubdomains?: bool

    stsPreload?: bool

    stsSeconds?: int


schema TraefikIoV1alpha1MiddlewareSpecIPAllowList:
    """
    IPAllowList holds the IP allowlist middleware configuration.
    This middleware limits allowed requests based on the client IP.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/ipallowlist/

    Attributes
    ----------
    ipStrategy : TraefikIoV1alpha1MiddlewareSpecIPAllowListIPStrategy, default is Undefined, optional
        ip strategy
    rejectStatusCode : int, default is Undefined, optional
        RejectStatusCode defines the HTTP status code used for refused requests.
        If not set, the default is 403 (Forbidden).
    sourceRange : [str], default is Undefined, optional
        SourceRange defines the set of allowed IPs (or ranges of allowed IPs by using CIDR notation).
    """


    ipStrategy?: TraefikIoV1alpha1MiddlewareSpecIPAllowListIPStrategy

    rejectStatusCode?: int

    sourceRange?: [str]


schema TraefikIoV1alpha1MiddlewareSpecIPAllowListIPStrategy:
    """
    IPStrategy holds the IP strategy configuration used by Traefik to determine the client IP.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/ipallowlist/#ipstrategy

    Attributes
    ----------
    depth : int, default is Undefined, optional
        Depth tells Traefik to use the X-Forwarded-For header and take the IP located at the depth position (starting from the right).
    excludedIPs : [str], default is Undefined, optional
        ExcludedIPs configures Traefik to scan the X-Forwarded-For header and select the first IP not in the list.
    """


    depth?: int

    excludedIPs?: [str]


schema TraefikIoV1alpha1MiddlewareSpecIPWhiteList:
    """
    Deprecated: please use IPAllowList instead.

    Attributes
    ----------
    ipStrategy : TraefikIoV1alpha1MiddlewareSpecIPWhiteListIPStrategy, default is Undefined, optional
        ip strategy
    sourceRange : [str], default is Undefined, optional
        SourceRange defines the set of allowed IPs (or ranges of allowed IPs by using CIDR notation). Required.
    """


    ipStrategy?: TraefikIoV1alpha1MiddlewareSpecIPWhiteListIPStrategy

    sourceRange?: [str]


schema TraefikIoV1alpha1MiddlewareSpecIPWhiteListIPStrategy:
    """
    IPStrategy holds the IP strategy configuration used by Traefik to determine the client IP.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/ipallowlist/#ipstrategy

    Attributes
    ----------
    depth : int, default is Undefined, optional
        Depth tells Traefik to use the X-Forwarded-For header and take the IP located at the depth position (starting from the right).
    excludedIPs : [str], default is Undefined, optional
        ExcludedIPs configures Traefik to scan the X-Forwarded-For header and select the first IP not in the list.
    """


    depth?: int

    excludedIPs?: [str]


schema TraefikIoV1alpha1MiddlewareSpecInFlightReq:
    """
    InFlightReq holds the in-flight request middleware configuration.
    This middleware limits the number of requests being processed and served concurrently.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/inflightreq/

    Attributes
    ----------
    amount : int, default is Undefined, optional
        Amount defines the maximum amount of allowed simultaneous in-flight request.
        The middleware responds with HTTP 429 Too Many Requests if there are already amount requests in progress (based on the same sourceCriterion strategy).
    sourceCriterion : TraefikIoV1alpha1MiddlewareSpecInFlightReqSourceCriterion, default is Undefined, optional
        source criterion
    """


    amount?: int

    sourceCriterion?: TraefikIoV1alpha1MiddlewareSpecInFlightReqSourceCriterion


schema TraefikIoV1alpha1MiddlewareSpecInFlightReqSourceCriterion:
    """
    SourceCriterion defines what criterion is used to group requests as originating from a common source.
    If several strategies are defined at the same time, an error will be raised.
    If none are set, the default is to use the requestHost.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/inflightreq/#sourcecriterion

    Attributes
    ----------
    ipStrategy : TraefikIoV1alpha1MiddlewareSpecInFlightReqSourceCriterionIPStrategy, default is Undefined, optional
        ip strategy
    requestHeaderName : str, default is Undefined, optional
        RequestHeaderName defines the name of the header used to group incoming requests.
    requestHost : bool, default is Undefined, optional
        RequestHost defines whether to consider the request Host as the source.
    """


    ipStrategy?: TraefikIoV1alpha1MiddlewareSpecInFlightReqSourceCriterionIPStrategy

    requestHeaderName?: str

    requestHost?: bool


schema TraefikIoV1alpha1MiddlewareSpecInFlightReqSourceCriterionIPStrategy:
    """
    IPStrategy holds the IP strategy configuration used by Traefik to determine the client IP.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/ipallowlist/#ipstrategy

    Attributes
    ----------
    depth : int, default is Undefined, optional
        Depth tells Traefik to use the X-Forwarded-For header and take the IP located at the depth position (starting from the right).
    excludedIPs : [str], default is Undefined, optional
        ExcludedIPs configures Traefik to scan the X-Forwarded-For header and select the first IP not in the list.
    """


    depth?: int

    excludedIPs?: [str]


schema TraefikIoV1alpha1MiddlewareSpecPassTLSClientCert:
    """
    PassTLSClientCert holds the pass TLS client cert middleware configuration.
    This middleware adds the selected data from the passed client TLS certificate to a header.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/passtlsclientcert/

    Attributes
    ----------
    info : TraefikIoV1alpha1MiddlewareSpecPassTLSClientCertInfo, default is Undefined, optional
        info
    pem : bool, default is Undefined, optional
        PEM sets the X-Forwarded-Tls-Client-Cert header with the certificate.
    """


    info?: TraefikIoV1alpha1MiddlewareSpecPassTLSClientCertInfo

    pem?: bool


schema TraefikIoV1alpha1MiddlewareSpecPassTLSClientCertInfo:
    """
    Info selects the specific client certificate details you want to add to the X-Forwarded-Tls-Client-Cert-Info header.

    Attributes
    ----------
    issuer : TraefikIoV1alpha1MiddlewareSpecPassTLSClientCertInfoIssuer, default is Undefined, optional
        issuer
    notAfter : bool, default is Undefined, optional
        NotAfter defines whether to add the Not After information from the Validity part.
    notBefore : bool, default is Undefined, optional
        NotBefore defines whether to add the Not Before information from the Validity part.
    sans : bool, default is Undefined, optional
        Sans defines whether to add the Subject Alternative Name information from the Subject Alternative Name part.
    serialNumber : bool, default is Undefined, optional
        SerialNumber defines whether to add the client serialNumber information.
    subject : TraefikIoV1alpha1MiddlewareSpecPassTLSClientCertInfoSubject, default is Undefined, optional
        subject
    """


    issuer?: TraefikIoV1alpha1MiddlewareSpecPassTLSClientCertInfoIssuer

    notAfter?: bool

    notBefore?: bool

    sans?: bool

    serialNumber?: bool

    subject?: TraefikIoV1alpha1MiddlewareSpecPassTLSClientCertInfoSubject


schema TraefikIoV1alpha1MiddlewareSpecPassTLSClientCertInfoIssuer:
    """
    Issuer defines the client certificate issuer details to add to the X-Forwarded-Tls-Client-Cert-Info header.

    Attributes
    ----------
    commonName : bool, default is Undefined, optional
        CommonName defines whether to add the organizationalUnit information into the issuer.
    country : bool, default is Undefined, optional
        Country defines whether to add the country information into the issuer.
    domainComponent : bool, default is Undefined, optional
        DomainComponent defines whether to add the domainComponent information into the issuer.
    locality : bool, default is Undefined, optional
        Locality defines whether to add the locality information into the issuer.
    organization : bool, default is Undefined, optional
        Organization defines whether to add the organization information into the issuer.
    province : bool, default is Undefined, optional
        Province defines whether to add the province information into the issuer.
    serialNumber : bool, default is Undefined, optional
        SerialNumber defines whether to add the serialNumber information into the issuer.
    """


    commonName?: bool

    country?: bool

    domainComponent?: bool

    locality?: bool

    organization?: bool

    province?: bool

    serialNumber?: bool


schema TraefikIoV1alpha1MiddlewareSpecPassTLSClientCertInfoSubject:
    """
    Subject defines the client certificate subject details to add to the X-Forwarded-Tls-Client-Cert-Info header.

    Attributes
    ----------
    commonName : bool, default is Undefined, optional
        CommonName defines whether to add the organizationalUnit information into the subject.
    country : bool, default is Undefined, optional
        Country defines whether to add the country information into the subject.
    domainComponent : bool, default is Undefined, optional
        DomainComponent defines whether to add the domainComponent information into the subject.
    locality : bool, default is Undefined, optional
        Locality defines whether to add the locality information into the subject.
    organization : bool, default is Undefined, optional
        Organization defines whether to add the organization information into the subject.
    organizationalUnit : bool, default is Undefined, optional
        OrganizationalUnit defines whether to add the organizationalUnit information into the subject.
    province : bool, default is Undefined, optional
        Province defines whether to add the province information into the subject.
    serialNumber : bool, default is Undefined, optional
        SerialNumber defines whether to add the serialNumber information into the subject.
    """


    commonName?: bool

    country?: bool

    domainComponent?: bool

    locality?: bool

    organization?: bool

    organizationalUnit?: bool

    province?: bool

    serialNumber?: bool


schema TraefikIoV1alpha1MiddlewareSpecRateLimit:
    """
    RateLimit holds the rate limit configuration.
    This middleware ensures that services will receive a fair amount of requests, and allows one to define what fair is.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/ratelimit/

    Attributes
    ----------
    average : int, default is Undefined, optional
        Average is the maximum rate, by default in requests/s, allowed for the given source.
        It defaults to 0, which means no rate limiting.
        The rate is actually defined by dividing Average by Period. So for a rate below 1req/s,
        one needs to define a Period larger than a second.
    burst : int, default is Undefined, optional
        Burst is the maximum number of requests allowed to arrive in the same arbitrarily small period of time.
        It defaults to 1.
    period : int | str, default is Undefined, optional
        Period, in combination with Average, defines the actual maximum rate, such as:
        r = Average / Period. It defaults to a second.
    sourceCriterion : TraefikIoV1alpha1MiddlewareSpecRateLimitSourceCriterion, default is Undefined, optional
        source criterion
    """


    average?: int

    burst?: int

    period?: int | str

    sourceCriterion?: TraefikIoV1alpha1MiddlewareSpecRateLimitSourceCriterion


schema TraefikIoV1alpha1MiddlewareSpecRateLimitSourceCriterion:
    """
    SourceCriterion defines what criterion is used to group requests as originating from a common source.
    If several strategies are defined at the same time, an error will be raised.
    If none are set, the default is to use the request's remote address field (as an ipStrategy).

    Attributes
    ----------
    ipStrategy : TraefikIoV1alpha1MiddlewareSpecRateLimitSourceCriterionIPStrategy, default is Undefined, optional
        ip strategy
    requestHeaderName : str, default is Undefined, optional
        RequestHeaderName defines the name of the header used to group incoming requests.
    requestHost : bool, default is Undefined, optional
        RequestHost defines whether to consider the request Host as the source.
    """


    ipStrategy?: TraefikIoV1alpha1MiddlewareSpecRateLimitSourceCriterionIPStrategy

    requestHeaderName?: str

    requestHost?: bool


schema TraefikIoV1alpha1MiddlewareSpecRateLimitSourceCriterionIPStrategy:
    """
    IPStrategy holds the IP strategy configuration used by Traefik to determine the client IP.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/ipallowlist/#ipstrategy

    Attributes
    ----------
    depth : int, default is Undefined, optional
        Depth tells Traefik to use the X-Forwarded-For header and take the IP located at the depth position (starting from the right).
    excludedIPs : [str], default is Undefined, optional
        ExcludedIPs configures Traefik to scan the X-Forwarded-For header and select the first IP not in the list.
    """


    depth?: int

    excludedIPs?: [str]


schema TraefikIoV1alpha1MiddlewareSpecRedirectRegex:
    """
    RedirectRegex holds the redirect regex middleware configuration.
    This middleware redirects a request using regex matching and replacement.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/redirectregex/#regex

    Attributes
    ----------
    permanent : bool, default is Undefined, optional
        Permanent defines whether the redirection is permanent (301).
    regex : str, default is Undefined, optional
        Regex defines the regex used to match and capture elements from the request URL.
    replacement : str, default is Undefined, optional
        Replacement defines how to modify the URL to have the new target URL.
    """


    permanent?: bool

    regex?: str

    replacement?: str


schema TraefikIoV1alpha1MiddlewareSpecRedirectScheme:
    """
    RedirectScheme holds the redirect scheme middleware configuration.
    This middleware redirects requests from a scheme/port to another.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/redirectscheme/

    Attributes
    ----------
    permanent : bool, default is Undefined, optional
        Permanent defines whether the redirection is permanent (301).
    port : str, default is Undefined, optional
        Port defines the port of the new URL.
    scheme : str, default is Undefined, optional
        Scheme defines the scheme of the new URL.
    """


    permanent?: bool

    port?: str

    scheme?: str


schema TraefikIoV1alpha1MiddlewareSpecReplacePath:
    """
    ReplacePath holds the replace path middleware configuration.
    This middleware replaces the path of the request URL and store the original path in an X-Replaced-Path header.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/replacepath/

    Attributes
    ----------
    path : str, default is Undefined, optional
        Path defines the path to use as replacement in the request URL.
    """


    path?: str


schema TraefikIoV1alpha1MiddlewareSpecReplacePathRegex:
    """
    ReplacePathRegex holds the replace path regex middleware configuration.
    This middleware replaces the path of a URL using regex matching and replacement.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/replacepathregex/

    Attributes
    ----------
    regex : str, default is Undefined, optional
        Regex defines the regular expression used to match and capture the path from the request URL.
    replacement : str, default is Undefined, optional
        Replacement defines the replacement path format, which can include captured variables.
    """


    regex?: str

    replacement?: str


schema TraefikIoV1alpha1MiddlewareSpecRetry:
    """
    Retry holds the retry middleware configuration.
    This middleware reissues requests a given number of times to a backend server if that server does not reply.
    As soon as the server answers, the middleware stops retrying, regardless of the response status.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/retry/

    Attributes
    ----------
    attempts : int, default is Undefined, optional
        Attempts defines how many times the request should be retried.
    initialInterval : int | str, default is Undefined, optional
        InitialInterval defines the first wait time in the exponential backoff series.
        The maximum interval is calculated as twice the initialInterval.
        If unspecified, requests will be retried immediately.
        The value of initialInterval should be provided in seconds or as a valid duration format,
        see https://pkg.go.dev/time#ParseDuration.
    """


    attempts?: int

    initialInterval?: int | str


schema TraefikIoV1alpha1MiddlewareSpecStripPrefix:
    """
    StripPrefix holds the strip prefix middleware configuration.
    This middleware removes the specified prefixes from the URL path.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/stripprefix/

    Attributes
    ----------
    forceSlash : bool, default is Undefined, optional
        Deprecated: ForceSlash option is deprecated, please remove any usage of this option.
        ForceSlash ensures that the resulting stripped path is not the empty string, by replacing it with / when necessary.
        Default: true.
    prefixes : [str], default is Undefined, optional
        Prefixes defines the prefixes to strip from the request URL.
    """


    forceSlash?: bool

    prefixes?: [str]


schema TraefikIoV1alpha1MiddlewareSpecStripPrefixRegex:
    """
    StripPrefixRegex holds the strip prefix regex middleware configuration.
    This middleware removes the matching prefixes from the URL path.
    More info: https://doc.traefik.io/traefik/v3.0/middlewares/http/stripprefixregex/

    Attributes
    ----------
    regex : [str], default is Undefined, optional
        Regex defines the regular expression to match the path prefix from the request URL.
    """


    regex?: [str]


