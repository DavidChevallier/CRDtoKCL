"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema IngressRoute:
    """
    IngressRoute is the CRD implementation of a Traefik HTTP Router.

    Attributes
    ----------
    apiVersion : str, default is "traefik.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "IngressRoute", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, required
        metadata
    spec : TraefikIoV1alpha1IngressRouteSpec, default is Undefined, required
        spec
    """


    apiVersion: "traefik.io/v1alpha1" = "traefik.io/v1alpha1"

    kind: "IngressRoute" = "IngressRoute"

    metadata: v1.ObjectMeta

    spec: TraefikIoV1alpha1IngressRouteSpec


schema TraefikIoV1alpha1IngressRouteSpec:
    """
    IngressRouteSpec defines the desired state of IngressRoute.

    Attributes
    ----------
    entryPoints : [str], default is Undefined, optional
        EntryPoints defines the list of entry point names to bind to.
        Entry points have to be configured in the static configuration.
        More info: https://doc.traefik.io/traefik/v3.0/routing/entrypoints/
        Default: all.
    routes : [TraefikIoV1alpha1IngressRouteSpecRoutesItems0], default is Undefined, required
        Routes defines the list of routes.
    tls : TraefikIoV1alpha1IngressRouteSpecTLS, default is Undefined, optional
        tls
    """


    entryPoints?: [str]

    routes: [TraefikIoV1alpha1IngressRouteSpecRoutesItems0]

    tls?: TraefikIoV1alpha1IngressRouteSpecTLS


schema TraefikIoV1alpha1IngressRouteSpecRoutesItems0:
    """
    Route holds the HTTP route configuration.

    Attributes
    ----------
    kind : str, default is Undefined, required
        Kind defines the kind of the route.
        Rule is the only supported kind.
    match : str, default is Undefined, required
        Match defines the router's rule.
        More info: https://doc.traefik.io/traefik/v3.0/routing/routers/#rule
    middlewares : [TraefikIoV1alpha1IngressRouteSpecRoutesItems0MiddlewaresItems0], default is Undefined, optional
        Middlewares defines the list of references to Middleware resources.
        More info: https://doc.traefik.io/traefik/v3.0/routing/providers/kubernetes-crd/#kind-middleware
    priority : int, default is Undefined, optional
        Priority defines the router's priority.
        More info: https://doc.traefik.io/traefik/v3.0/routing/routers/#priority
    services : [TraefikIoV1alpha1IngressRouteSpecRoutesItems0ServicesItems0], default is Undefined, optional
        Services defines the list of Service.
        It can contain any combination of TraefikService and/or reference to a Kubernetes Service.
    syntax : str, default is Undefined, optional
        Syntax defines the router's rule syntax.
        More info: https://doc.traefik.io/traefik/v3.0/routing/routers/#rulesyntax
    """


    kind: "Rule"

    match: str

    middlewares?: [TraefikIoV1alpha1IngressRouteSpecRoutesItems0MiddlewaresItems0]

    priority?: int

    services?: [TraefikIoV1alpha1IngressRouteSpecRoutesItems0ServicesItems0]

    syntax?: str


schema TraefikIoV1alpha1IngressRouteSpecRoutesItems0MiddlewaresItems0:
    """
    MiddlewareRef is a reference to a Middleware resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name defines the name of the referenced Middleware resource.
    namespace : str, default is Undefined, optional
        Namespace defines the namespace of the referenced Middleware resource.
    """


    name: str

    namespace?: str


schema TraefikIoV1alpha1IngressRouteSpecRoutesItems0ServicesItems0:
    """
    Service defines an upstream HTTP service to proxy traffic to.

    Attributes
    ----------
    healthCheck : TraefikIoV1alpha1IngressRouteSpecRoutesItems0ServicesItems0HealthCheck, default is Undefined, optional
        health check
    kind : str, default is Undefined, optional
        Kind defines the kind of the Service.
    name : str, default is Undefined, required
        Name defines the name of the referenced Kubernetes Service or TraefikService.
        The differentiation between the two is specified in the Kind field.
    namespace : str, default is Undefined, optional
        Namespace defines the namespace of the referenced Kubernetes Service or TraefikService.
    nativeLB : bool, default is Undefined, optional
        NativeLB controls, when creating the load-balancer,
        whether the LB's children are directly the pods IPs or if the only child is the Kubernetes Service clusterIP.
        The Kubernetes Service itself does load-balance to the pods.
        By default, NativeLB is false.
    nodePortLB : bool, default is Undefined, optional
        NodePortLB controls, when creating the load-balancer,
        whether the LB's children are directly the nodes internal IPs using the nodePort when the service type is NodePort.
        It allows services to be reachable when Traefik runs externally from the Kubernetes cluster but within the same network of the nodes.
        By default, NodePortLB is false.
    passHostHeader : bool, default is Undefined, optional
        PassHostHeader defines whether the client Host header is forwarded to the upstream Kubernetes Service.
        By default, passHostHeader is true.
    port : int | str, default is Undefined, optional
        Port defines the port of a Kubernetes Service.
        This can be a reference to a named port.
    responseForwarding : TraefikIoV1alpha1IngressRouteSpecRoutesItems0ServicesItems0ResponseForwarding, default is Undefined, optional
        response forwarding
    scheme : str, default is Undefined, optional
        Scheme defines the scheme to use for the request to the upstream Kubernetes Service.
        It defaults to https when Kubernetes Service port is 443, http otherwise.
    serversTransport : str, default is Undefined, optional
        ServersTransport defines the name of ServersTransport resource to use.
        It allows to configure the transport between Traefik and your servers.
        Can only be used on a Kubernetes Service.
    sticky : TraefikIoV1alpha1IngressRouteSpecRoutesItems0ServicesItems0Sticky, default is Undefined, optional
        sticky
    strategy : str, default is Undefined, optional
        Strategy defines the load balancing strategy between the servers.
        RoundRobin is the only supported value at the moment.
    weight : int, default is Undefined, optional
        Weight defines the weight and should only be specified when Name references a TraefikService object
        (and to be precise, one that embeds a Weighted Round Robin).
    """


    healthCheck?: TraefikIoV1alpha1IngressRouteSpecRoutesItems0ServicesItems0HealthCheck

    kind?: "Service" | "TraefikService"

    name: str

    namespace?: str

    nativeLB?: bool

    nodePortLB?: bool

    passHostHeader?: bool

    port?: int | str

    responseForwarding?: TraefikIoV1alpha1IngressRouteSpecRoutesItems0ServicesItems0ResponseForwarding

    scheme?: str

    serversTransport?: str

    sticky?: TraefikIoV1alpha1IngressRouteSpecRoutesItems0ServicesItems0Sticky

    strategy?: str

    weight?: int


schema TraefikIoV1alpha1IngressRouteSpecRoutesItems0ServicesItems0HealthCheck:
    """
    Healthcheck defines health checks for ExternalName services.

    Attributes
    ----------
    followRedirects : bool, default is Undefined, optional
        FollowRedirects defines whether redirects should be followed during the health check calls.
        Default: true
    headers : {str:str}, default is Undefined, optional
        Headers defines custom headers to be sent to the health check endpoint.
    hostname : str, default is Undefined, optional
        Hostname defines the value of hostname in the Host header of the health check request.
    interval : int | str, default is Undefined, optional
        Interval defines the frequency of the health check calls.
        Default: 30s
    method : str, default is Undefined, optional
        Method defines the healthcheck method.
    mode : str, default is Undefined, optional
        Mode defines the health check mode.
        If defined to grpc, will use the gRPC health check protocol to probe the server.
        Default: http
    path : str, default is Undefined, optional
        Path defines the server URL path for the health check endpoint.
    port : int, default is Undefined, optional
        Port defines the server URL port for the health check endpoint.
    scheme : str, default is Undefined, optional
        Scheme replaces the server URL scheme for the health check endpoint.
    status : int, default is Undefined, optional
        Status defines the expected HTTP status code of the response to the health check request.
    timeout : int | str, default is Undefined, optional
        Timeout defines the maximum duration Traefik will wait for a health check request before considering the server unhealthy.
        Default: 5s
    """


    followRedirects?: bool

    headers?: {str:str}

    hostname?: str

    interval?: int | str

    method?: str

    mode?: str

    path?: str

    port?: int

    scheme?: str

    status?: int

    timeout?: int | str


schema TraefikIoV1alpha1IngressRouteSpecRoutesItems0ServicesItems0ResponseForwarding:
    """
    ResponseForwarding defines how Traefik forwards the response from the upstream Kubernetes Service to the client.

    Attributes
    ----------
    flushInterval : str, default is Undefined, optional
        FlushInterval defines the interval, in milliseconds, in between flushes to the client while copying the response body.
        A negative value means to flush immediately after each write to the client.
        This configuration is ignored when ReverseProxy recognizes a response as a streaming response;
        for such responses, writes are flushed to the client immediately.
        Default: 100ms
    """


    flushInterval?: str


schema TraefikIoV1alpha1IngressRouteSpecRoutesItems0ServicesItems0Sticky:
    """
    Sticky defines the sticky sessions configuration.
    More info: https://doc.traefik.io/traefik/v3.0/routing/services/#sticky-sessions

    Attributes
    ----------
    cookie : TraefikIoV1alpha1IngressRouteSpecRoutesItems0ServicesItems0StickyCookie, default is Undefined, optional
        cookie
    """


    cookie?: TraefikIoV1alpha1IngressRouteSpecRoutesItems0ServicesItems0StickyCookie


schema TraefikIoV1alpha1IngressRouteSpecRoutesItems0ServicesItems0StickyCookie:
    """
    Cookie defines the sticky cookie configuration.

    Attributes
    ----------
    httpOnly : bool, default is Undefined, optional
        HTTPOnly defines whether the cookie can be accessed by client-side APIs, such as JavaScript.
    maxAge : int, default is Undefined, optional
        MaxAge indicates the number of seconds until the cookie expires.
        When set to a negative number, the cookie expires immediately.
        When set to zero, the cookie never expires.
    name : str, default is Undefined, optional
        Name defines the Cookie name.
    sameSite : str, default is Undefined, optional
        SameSite defines the same site policy.
        More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite
    secure : bool, default is Undefined, optional
        Secure defines whether the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).
    """


    httpOnly?: bool

    maxAge?: int

    name?: str

    sameSite?: str

    secure?: bool


schema TraefikIoV1alpha1IngressRouteSpecTLS:
    """
    TLS defines the TLS configuration.
    More info: https://doc.traefik.io/traefik/v3.0/routing/routers/#tls

    Attributes
    ----------
    certResolver : str, default is Undefined, optional
        CertResolver defines the name of the certificate resolver to use.
        Cert resolvers have to be configured in the static configuration.
        More info: https://doc.traefik.io/traefik/v3.0/https/acme/#certificate-resolvers
    domains : [TraefikIoV1alpha1IngressRouteSpecTLSDomainsItems0], default is Undefined, optional
        Domains defines the list of domains that will be used to issue certificates.
        More info: https://doc.traefik.io/traefik/v3.0/routing/routers/#domains
    options : TraefikIoV1alpha1IngressRouteSpecTLSOptions, default is Undefined, optional
        options
    secretName : str, default is Undefined, optional
        SecretName is the name of the referenced Kubernetes Secret to specify the certificate details.
    store : TraefikIoV1alpha1IngressRouteSpecTLSStore, default is Undefined, optional
        store
    """


    certResolver?: str

    domains?: [TraefikIoV1alpha1IngressRouteSpecTLSDomainsItems0]

    options?: TraefikIoV1alpha1IngressRouteSpecTLSOptions

    secretName?: str

    store?: TraefikIoV1alpha1IngressRouteSpecTLSStore


schema TraefikIoV1alpha1IngressRouteSpecTLSDomainsItems0:
    """
    Domain holds a domain name with SANs.

    Attributes
    ----------
    main : str, default is Undefined, optional
        Main defines the main domain name.
    sans : [str], default is Undefined, optional
        SANs defines the subject alternative domain names.
    """


    main?: str

    sans?: [str]


schema TraefikIoV1alpha1IngressRouteSpecTLSOptions:
    """
    Options defines the reference to a TLSOption, that specifies the parameters of the TLS connection.
    If not defined, the `default` TLSOption is used.
    More info: https://doc.traefik.io/traefik/v3.0/https/tls/#tls-options

    Attributes
    ----------
    name : str, default is Undefined, required
        Name defines the name of the referenced TLSOption.
        More info: https://doc.traefik.io/traefik/v3.0/routing/providers/kubernetes-crd/#kind-tlsoption
    namespace : str, default is Undefined, optional
        Namespace defines the namespace of the referenced TLSOption.
        More info: https://doc.traefik.io/traefik/v3.0/routing/providers/kubernetes-crd/#kind-tlsoption
    """


    name: str

    namespace?: str


schema TraefikIoV1alpha1IngressRouteSpecTLSStore:
    """
    Store defines the reference to the TLSStore, that will be used to store certificates.
    Please note that only `default` TLSStore can be used.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name defines the name of the referenced TLSStore.
        More info: https://doc.traefik.io/traefik/v3.0/routing/providers/kubernetes-crd/#kind-tlsstore
    namespace : str, default is Undefined, optional
        Namespace defines the namespace of the referenced TLSStore.
        More info: https://doc.traefik.io/traefik/v3.0/routing/providers/kubernetes-crd/#kind-tlsstore
    """


    name: str

    namespace?: str


