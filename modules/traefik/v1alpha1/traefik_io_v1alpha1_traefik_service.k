"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema TraefikService:
    """
    TraefikService is the CRD implementation of a Traefik Service.
    TraefikService object allows to:
    - Apply weight to Services on load-balancing
    - Mirror traffic on services
    More info: https://doc.traefik.io/traefik/v3.0/routing/providers/kubernetes-crd/#kind-traefikservice

    Attributes
    ----------
    apiVersion : str, default is "traefik.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TraefikService", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, required
        metadata
    spec : TraefikIoV1alpha1TraefikServiceSpec, default is Undefined, required
        spec
    """


    apiVersion: "traefik.io/v1alpha1" = "traefik.io/v1alpha1"

    kind: "TraefikService" = "TraefikService"

    metadata: v1.ObjectMeta

    spec: TraefikIoV1alpha1TraefikServiceSpec


schema TraefikIoV1alpha1TraefikServiceSpec:
    """
    TraefikServiceSpec defines the desired state of a TraefikService.

    Attributes
    ----------
    mirroring : TraefikIoV1alpha1TraefikServiceSpecMirroring, default is Undefined, optional
        mirroring
    weighted : TraefikIoV1alpha1TraefikServiceSpecWeighted, default is Undefined, optional
        weighted
    """


    mirroring?: TraefikIoV1alpha1TraefikServiceSpecMirroring

    weighted?: TraefikIoV1alpha1TraefikServiceSpecWeighted


schema TraefikIoV1alpha1TraefikServiceSpecMirroring:
    """
    Mirroring defines the Mirroring service configuration.

    Attributes
    ----------
    healthCheck : TraefikIoV1alpha1TraefikServiceSpecMirroringHealthCheck, default is Undefined, optional
        health check
    kind : str, default is Undefined, optional
        Kind defines the kind of the Service.
    maxBodySize : int, default is Undefined, optional
        MaxBodySize defines the maximum size allowed for the body of the request.
        If the body is larger, the request is not mirrored.
        Default value is -1, which means unlimited size.
    mirrors : [TraefikIoV1alpha1TraefikServiceSpecMirroringMirrorsItems0], default is Undefined, optional
        Mirrors defines the list of mirrors where Traefik will duplicate the traffic.
    name : str, default is Undefined, required
        Name defines the name of the referenced Kubernetes Service or TraefikService.
        The differentiation between the two is specified in the Kind field.
    namespace : str, default is Undefined, optional
        Namespace defines the namespace of the referenced Kubernetes Service or TraefikService.
    nativeLB : bool, default is Undefined, optional
        NativeLB controls, when creating the load-balancer,
        whether the LB's children are directly the pods IPs or if the only child is the Kubernetes Service clusterIP.
        The Kubernetes Service itself does load-balance to the pods.
        By default, NativeLB is false.
    nodePortLB : bool, default is Undefined, optional
        NodePortLB controls, when creating the load-balancer,
        whether the LB's children are directly the nodes internal IPs using the nodePort when the service type is NodePort.
        It allows services to be reachable when Traefik runs externally from the Kubernetes cluster but within the same network of the nodes.
        By default, NodePortLB is false.
    passHostHeader : bool, default is Undefined, optional
        PassHostHeader defines whether the client Host header is forwarded to the upstream Kubernetes Service.
        By default, passHostHeader is true.
    port : int | str, default is Undefined, optional
        Port defines the port of a Kubernetes Service.
        This can be a reference to a named port.
    responseForwarding : TraefikIoV1alpha1TraefikServiceSpecMirroringResponseForwarding, default is Undefined, optional
        response forwarding
    scheme : str, default is Undefined, optional
        Scheme defines the scheme to use for the request to the upstream Kubernetes Service.
        It defaults to https when Kubernetes Service port is 443, http otherwise.
    serversTransport : str, default is Undefined, optional
        ServersTransport defines the name of ServersTransport resource to use.
        It allows to configure the transport between Traefik and your servers.
        Can only be used on a Kubernetes Service.
    sticky : TraefikIoV1alpha1TraefikServiceSpecMirroringSticky, default is Undefined, optional
        sticky
    strategy : str, default is Undefined, optional
        Strategy defines the load balancing strategy between the servers.
        RoundRobin is the only supported value at the moment.
    weight : int, default is Undefined, optional
        Weight defines the weight and should only be specified when Name references a TraefikService object
        (and to be precise, one that embeds a Weighted Round Robin).
    """


    healthCheck?: TraefikIoV1alpha1TraefikServiceSpecMirroringHealthCheck

    kind?: "Service" | "TraefikService"

    maxBodySize?: int

    mirrors?: [TraefikIoV1alpha1TraefikServiceSpecMirroringMirrorsItems0]

    name: str

    namespace?: str

    nativeLB?: bool

    nodePortLB?: bool

    passHostHeader?: bool

    port?: int | str

    responseForwarding?: TraefikIoV1alpha1TraefikServiceSpecMirroringResponseForwarding

    scheme?: str

    serversTransport?: str

    sticky?: TraefikIoV1alpha1TraefikServiceSpecMirroringSticky

    strategy?: str

    weight?: int


schema TraefikIoV1alpha1TraefikServiceSpecMirroringHealthCheck:
    """
    Healthcheck defines health checks for ExternalName services.

    Attributes
    ----------
    followRedirects : bool, default is Undefined, optional
        FollowRedirects defines whether redirects should be followed during the health check calls.
        Default: true
    headers : {str:str}, default is Undefined, optional
        Headers defines custom headers to be sent to the health check endpoint.
    hostname : str, default is Undefined, optional
        Hostname defines the value of hostname in the Host header of the health check request.
    interval : int | str, default is Undefined, optional
        Interval defines the frequency of the health check calls.
        Default: 30s
    method : str, default is Undefined, optional
        Method defines the healthcheck method.
    mode : str, default is Undefined, optional
        Mode defines the health check mode.
        If defined to grpc, will use the gRPC health check protocol to probe the server.
        Default: http
    path : str, default is Undefined, optional
        Path defines the server URL path for the health check endpoint.
    port : int, default is Undefined, optional
        Port defines the server URL port for the health check endpoint.
    scheme : str, default is Undefined, optional
        Scheme replaces the server URL scheme for the health check endpoint.
    status : int, default is Undefined, optional
        Status defines the expected HTTP status code of the response to the health check request.
    timeout : int | str, default is Undefined, optional
        Timeout defines the maximum duration Traefik will wait for a health check request before considering the server unhealthy.
        Default: 5s
    """


    followRedirects?: bool

    headers?: {str:str}

    hostname?: str

    interval?: int | str

    method?: str

    mode?: str

    path?: str

    port?: int

    scheme?: str

    status?: int

    timeout?: int | str


schema TraefikIoV1alpha1TraefikServiceSpecMirroringMirrorsItems0:
    """
    MirrorService holds the mirror configuration.

    Attributes
    ----------
    healthCheck : TraefikIoV1alpha1TraefikServiceSpecMirroringMirrorsItems0HealthCheck, default is Undefined, optional
        health check
    kind : str, default is Undefined, optional
        Kind defines the kind of the Service.
    name : str, default is Undefined, required
        Name defines the name of the referenced Kubernetes Service or TraefikService.
        The differentiation between the two is specified in the Kind field.
    namespace : str, default is Undefined, optional
        Namespace defines the namespace of the referenced Kubernetes Service or TraefikService.
    nativeLB : bool, default is Undefined, optional
        NativeLB controls, when creating the load-balancer,
        whether the LB's children are directly the pods IPs or if the only child is the Kubernetes Service clusterIP.
        The Kubernetes Service itself does load-balance to the pods.
        By default, NativeLB is false.
    nodePortLB : bool, default is Undefined, optional
        NodePortLB controls, when creating the load-balancer,
        whether the LB's children are directly the nodes internal IPs using the nodePort when the service type is NodePort.
        It allows services to be reachable when Traefik runs externally from the Kubernetes cluster but within the same network of the nodes.
        By default, NodePortLB is false.
    passHostHeader : bool, default is Undefined, optional
        PassHostHeader defines whether the client Host header is forwarded to the upstream Kubernetes Service.
        By default, passHostHeader is true.
    percent : int, default is Undefined, optional
        Percent defines the part of the traffic to mirror.
        Supported values: 0 to 100.
    port : int | str, default is Undefined, optional
        Port defines the port of a Kubernetes Service.
        This can be a reference to a named port.
    responseForwarding : TraefikIoV1alpha1TraefikServiceSpecMirroringMirrorsItems0ResponseForwarding, default is Undefined, optional
        response forwarding
    scheme : str, default is Undefined, optional
        Scheme defines the scheme to use for the request to the upstream Kubernetes Service.
        It defaults to https when Kubernetes Service port is 443, http otherwise.
    serversTransport : str, default is Undefined, optional
        ServersTransport defines the name of ServersTransport resource to use.
        It allows to configure the transport between Traefik and your servers.
        Can only be used on a Kubernetes Service.
    sticky : TraefikIoV1alpha1TraefikServiceSpecMirroringMirrorsItems0Sticky, default is Undefined, optional
        sticky
    strategy : str, default is Undefined, optional
        Strategy defines the load balancing strategy between the servers.
        RoundRobin is the only supported value at the moment.
    weight : int, default is Undefined, optional
        Weight defines the weight and should only be specified when Name references a TraefikService object
        (and to be precise, one that embeds a Weighted Round Robin).
    """


    healthCheck?: TraefikIoV1alpha1TraefikServiceSpecMirroringMirrorsItems0HealthCheck

    kind?: "Service" | "TraefikService"

    name: str

    namespace?: str

    nativeLB?: bool

    nodePortLB?: bool

    passHostHeader?: bool

    percent?: int

    port?: int | str

    responseForwarding?: TraefikIoV1alpha1TraefikServiceSpecMirroringMirrorsItems0ResponseForwarding

    scheme?: str

    serversTransport?: str

    sticky?: TraefikIoV1alpha1TraefikServiceSpecMirroringMirrorsItems0Sticky

    strategy?: str

    weight?: int


schema TraefikIoV1alpha1TraefikServiceSpecMirroringMirrorsItems0HealthCheck:
    """
    Healthcheck defines health checks for ExternalName services.

    Attributes
    ----------
    followRedirects : bool, default is Undefined, optional
        FollowRedirects defines whether redirects should be followed during the health check calls.
        Default: true
    headers : {str:str}, default is Undefined, optional
        Headers defines custom headers to be sent to the health check endpoint.
    hostname : str, default is Undefined, optional
        Hostname defines the value of hostname in the Host header of the health check request.
    interval : int | str, default is Undefined, optional
        Interval defines the frequency of the health check calls.
        Default: 30s
    method : str, default is Undefined, optional
        Method defines the healthcheck method.
    mode : str, default is Undefined, optional
        Mode defines the health check mode.
        If defined to grpc, will use the gRPC health check protocol to probe the server.
        Default: http
    path : str, default is Undefined, optional
        Path defines the server URL path for the health check endpoint.
    port : int, default is Undefined, optional
        Port defines the server URL port for the health check endpoint.
    scheme : str, default is Undefined, optional
        Scheme replaces the server URL scheme for the health check endpoint.
    status : int, default is Undefined, optional
        Status defines the expected HTTP status code of the response to the health check request.
    timeout : int | str, default is Undefined, optional
        Timeout defines the maximum duration Traefik will wait for a health check request before considering the server unhealthy.
        Default: 5s
    """


    followRedirects?: bool

    headers?: {str:str}

    hostname?: str

    interval?: int | str

    method?: str

    mode?: str

    path?: str

    port?: int

    scheme?: str

    status?: int

    timeout?: int | str


schema TraefikIoV1alpha1TraefikServiceSpecMirroringMirrorsItems0ResponseForwarding:
    """
    ResponseForwarding defines how Traefik forwards the response from the upstream Kubernetes Service to the client.

    Attributes
    ----------
    flushInterval : str, default is Undefined, optional
        FlushInterval defines the interval, in milliseconds, in between flushes to the client while copying the response body.
        A negative value means to flush immediately after each write to the client.
        This configuration is ignored when ReverseProxy recognizes a response as a streaming response;
        for such responses, writes are flushed to the client immediately.
        Default: 100ms
    """


    flushInterval?: str


schema TraefikIoV1alpha1TraefikServiceSpecMirroringMirrorsItems0Sticky:
    """
    Sticky defines the sticky sessions configuration.
    More info: https://doc.traefik.io/traefik/v3.0/routing/services/#sticky-sessions

    Attributes
    ----------
    cookie : TraefikIoV1alpha1TraefikServiceSpecMirroringMirrorsItems0StickyCookie, default is Undefined, optional
        cookie
    """


    cookie?: TraefikIoV1alpha1TraefikServiceSpecMirroringMirrorsItems0StickyCookie


schema TraefikIoV1alpha1TraefikServiceSpecMirroringMirrorsItems0StickyCookie:
    """
    Cookie defines the sticky cookie configuration.

    Attributes
    ----------
    httpOnly : bool, default is Undefined, optional
        HTTPOnly defines whether the cookie can be accessed by client-side APIs, such as JavaScript.
    maxAge : int, default is Undefined, optional
        MaxAge indicates the number of seconds until the cookie expires.
        When set to a negative number, the cookie expires immediately.
        When set to zero, the cookie never expires.
    name : str, default is Undefined, optional
        Name defines the Cookie name.
    sameSite : str, default is Undefined, optional
        SameSite defines the same site policy.
        More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite
    secure : bool, default is Undefined, optional
        Secure defines whether the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).
    """


    httpOnly?: bool

    maxAge?: int

    name?: str

    sameSite?: str

    secure?: bool


schema TraefikIoV1alpha1TraefikServiceSpecMirroringResponseForwarding:
    """
    ResponseForwarding defines how Traefik forwards the response from the upstream Kubernetes Service to the client.

    Attributes
    ----------
    flushInterval : str, default is Undefined, optional
        FlushInterval defines the interval, in milliseconds, in between flushes to the client while copying the response body.
        A negative value means to flush immediately after each write to the client.
        This configuration is ignored when ReverseProxy recognizes a response as a streaming response;
        for such responses, writes are flushed to the client immediately.
        Default: 100ms
    """


    flushInterval?: str


schema TraefikIoV1alpha1TraefikServiceSpecMirroringSticky:
    """
    Sticky defines the sticky sessions configuration.
    More info: https://doc.traefik.io/traefik/v3.0/routing/services/#sticky-sessions

    Attributes
    ----------
    cookie : TraefikIoV1alpha1TraefikServiceSpecMirroringStickyCookie, default is Undefined, optional
        cookie
    """


    cookie?: TraefikIoV1alpha1TraefikServiceSpecMirroringStickyCookie


schema TraefikIoV1alpha1TraefikServiceSpecMirroringStickyCookie:
    """
    Cookie defines the sticky cookie configuration.

    Attributes
    ----------
    httpOnly : bool, default is Undefined, optional
        HTTPOnly defines whether the cookie can be accessed by client-side APIs, such as JavaScript.
    maxAge : int, default is Undefined, optional
        MaxAge indicates the number of seconds until the cookie expires.
        When set to a negative number, the cookie expires immediately.
        When set to zero, the cookie never expires.
    name : str, default is Undefined, optional
        Name defines the Cookie name.
    sameSite : str, default is Undefined, optional
        SameSite defines the same site policy.
        More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite
    secure : bool, default is Undefined, optional
        Secure defines whether the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).
    """


    httpOnly?: bool

    maxAge?: int

    name?: str

    sameSite?: str

    secure?: bool


schema TraefikIoV1alpha1TraefikServiceSpecWeighted:
    """
    Weighted defines the Weighted Round Robin configuration.

    Attributes
    ----------
    services : [TraefikIoV1alpha1TraefikServiceSpecWeightedServicesItems0], default is Undefined, optional
        Services defines the list of Kubernetes Service and/or TraefikService to load-balance, with weight.
    sticky : TraefikIoV1alpha1TraefikServiceSpecWeightedSticky, default is Undefined, optional
        sticky
    """


    services?: [TraefikIoV1alpha1TraefikServiceSpecWeightedServicesItems0]

    sticky?: TraefikIoV1alpha1TraefikServiceSpecWeightedSticky


schema TraefikIoV1alpha1TraefikServiceSpecWeightedServicesItems0:
    """
    Service defines an upstream HTTP service to proxy traffic to.

    Attributes
    ----------
    healthCheck : TraefikIoV1alpha1TraefikServiceSpecWeightedServicesItems0HealthCheck, default is Undefined, optional
        health check
    kind : str, default is Undefined, optional
        Kind defines the kind of the Service.
    name : str, default is Undefined, required
        Name defines the name of the referenced Kubernetes Service or TraefikService.
        The differentiation between the two is specified in the Kind field.
    namespace : str, default is Undefined, optional
        Namespace defines the namespace of the referenced Kubernetes Service or TraefikService.
    nativeLB : bool, default is Undefined, optional
        NativeLB controls, when creating the load-balancer,
        whether the LB's children are directly the pods IPs or if the only child is the Kubernetes Service clusterIP.
        The Kubernetes Service itself does load-balance to the pods.
        By default, NativeLB is false.
    nodePortLB : bool, default is Undefined, optional
        NodePortLB controls, when creating the load-balancer,
        whether the LB's children are directly the nodes internal IPs using the nodePort when the service type is NodePort.
        It allows services to be reachable when Traefik runs externally from the Kubernetes cluster but within the same network of the nodes.
        By default, NodePortLB is false.
    passHostHeader : bool, default is Undefined, optional
        PassHostHeader defines whether the client Host header is forwarded to the upstream Kubernetes Service.
        By default, passHostHeader is true.
    port : int | str, default is Undefined, optional
        Port defines the port of a Kubernetes Service.
        This can be a reference to a named port.
    responseForwarding : TraefikIoV1alpha1TraefikServiceSpecWeightedServicesItems0ResponseForwarding, default is Undefined, optional
        response forwarding
    scheme : str, default is Undefined, optional
        Scheme defines the scheme to use for the request to the upstream Kubernetes Service.
        It defaults to https when Kubernetes Service port is 443, http otherwise.
    serversTransport : str, default is Undefined, optional
        ServersTransport defines the name of ServersTransport resource to use.
        It allows to configure the transport between Traefik and your servers.
        Can only be used on a Kubernetes Service.
    sticky : TraefikIoV1alpha1TraefikServiceSpecWeightedServicesItems0Sticky, default is Undefined, optional
        sticky
    strategy : str, default is Undefined, optional
        Strategy defines the load balancing strategy between the servers.
        RoundRobin is the only supported value at the moment.
    weight : int, default is Undefined, optional
        Weight defines the weight and should only be specified when Name references a TraefikService object
        (and to be precise, one that embeds a Weighted Round Robin).
    """


    healthCheck?: TraefikIoV1alpha1TraefikServiceSpecWeightedServicesItems0HealthCheck

    kind?: "Service" | "TraefikService"

    name: str

    namespace?: str

    nativeLB?: bool

    nodePortLB?: bool

    passHostHeader?: bool

    port?: int | str

    responseForwarding?: TraefikIoV1alpha1TraefikServiceSpecWeightedServicesItems0ResponseForwarding

    scheme?: str

    serversTransport?: str

    sticky?: TraefikIoV1alpha1TraefikServiceSpecWeightedServicesItems0Sticky

    strategy?: str

    weight?: int


schema TraefikIoV1alpha1TraefikServiceSpecWeightedServicesItems0HealthCheck:
    """
    Healthcheck defines health checks for ExternalName services.

    Attributes
    ----------
    followRedirects : bool, default is Undefined, optional
        FollowRedirects defines whether redirects should be followed during the health check calls.
        Default: true
    headers : {str:str}, default is Undefined, optional
        Headers defines custom headers to be sent to the health check endpoint.
    hostname : str, default is Undefined, optional
        Hostname defines the value of hostname in the Host header of the health check request.
    interval : int | str, default is Undefined, optional
        Interval defines the frequency of the health check calls.
        Default: 30s
    method : str, default is Undefined, optional
        Method defines the healthcheck method.
    mode : str, default is Undefined, optional
        Mode defines the health check mode.
        If defined to grpc, will use the gRPC health check protocol to probe the server.
        Default: http
    path : str, default is Undefined, optional
        Path defines the server URL path for the health check endpoint.
    port : int, default is Undefined, optional
        Port defines the server URL port for the health check endpoint.
    scheme : str, default is Undefined, optional
        Scheme replaces the server URL scheme for the health check endpoint.
    status : int, default is Undefined, optional
        Status defines the expected HTTP status code of the response to the health check request.
    timeout : int | str, default is Undefined, optional
        Timeout defines the maximum duration Traefik will wait for a health check request before considering the server unhealthy.
        Default: 5s
    """


    followRedirects?: bool

    headers?: {str:str}

    hostname?: str

    interval?: int | str

    method?: str

    mode?: str

    path?: str

    port?: int

    scheme?: str

    status?: int

    timeout?: int | str


schema TraefikIoV1alpha1TraefikServiceSpecWeightedServicesItems0ResponseForwarding:
    """
    ResponseForwarding defines how Traefik forwards the response from the upstream Kubernetes Service to the client.

    Attributes
    ----------
    flushInterval : str, default is Undefined, optional
        FlushInterval defines the interval, in milliseconds, in between flushes to the client while copying the response body.
        A negative value means to flush immediately after each write to the client.
        This configuration is ignored when ReverseProxy recognizes a response as a streaming response;
        for such responses, writes are flushed to the client immediately.
        Default: 100ms
    """


    flushInterval?: str


schema TraefikIoV1alpha1TraefikServiceSpecWeightedServicesItems0Sticky:
    """
    Sticky defines the sticky sessions configuration.
    More info: https://doc.traefik.io/traefik/v3.0/routing/services/#sticky-sessions

    Attributes
    ----------
    cookie : TraefikIoV1alpha1TraefikServiceSpecWeightedServicesItems0StickyCookie, default is Undefined, optional
        cookie
    """


    cookie?: TraefikIoV1alpha1TraefikServiceSpecWeightedServicesItems0StickyCookie


schema TraefikIoV1alpha1TraefikServiceSpecWeightedServicesItems0StickyCookie:
    """
    Cookie defines the sticky cookie configuration.

    Attributes
    ----------
    httpOnly : bool, default is Undefined, optional
        HTTPOnly defines whether the cookie can be accessed by client-side APIs, such as JavaScript.
    maxAge : int, default is Undefined, optional
        MaxAge indicates the number of seconds until the cookie expires.
        When set to a negative number, the cookie expires immediately.
        When set to zero, the cookie never expires.
    name : str, default is Undefined, optional
        Name defines the Cookie name.
    sameSite : str, default is Undefined, optional
        SameSite defines the same site policy.
        More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite
    secure : bool, default is Undefined, optional
        Secure defines whether the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).
    """


    httpOnly?: bool

    maxAge?: int

    name?: str

    sameSite?: str

    secure?: bool


schema TraefikIoV1alpha1TraefikServiceSpecWeightedSticky:
    """
    Sticky defines whether sticky sessions are enabled.
    More info: https://doc.traefik.io/traefik/v3.0/routing/providers/kubernetes-crd/#stickiness-and-load-balancing

    Attributes
    ----------
    cookie : TraefikIoV1alpha1TraefikServiceSpecWeightedStickyCookie, default is Undefined, optional
        cookie
    """


    cookie?: TraefikIoV1alpha1TraefikServiceSpecWeightedStickyCookie


schema TraefikIoV1alpha1TraefikServiceSpecWeightedStickyCookie:
    """
    Cookie defines the sticky cookie configuration.

    Attributes
    ----------
    httpOnly : bool, default is Undefined, optional
        HTTPOnly defines whether the cookie can be accessed by client-side APIs, such as JavaScript.
    maxAge : int, default is Undefined, optional
        MaxAge indicates the number of seconds until the cookie expires.
        When set to a negative number, the cookie expires immediately.
        When set to zero, the cookie never expires.
    name : str, default is Undefined, optional
        Name defines the Cookie name.
    sameSite : str, default is Undefined, optional
        SameSite defines the same site policy.
        More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite
    secure : bool, default is Undefined, optional
        Secure defines whether the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).
    """


    httpOnly?: bool

    maxAge?: int

    name?: str

    sameSite?: str

    secure?: bool


