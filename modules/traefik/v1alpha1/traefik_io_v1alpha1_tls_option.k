"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema TLSOption:
    """
    TLSOption is the CRD implementation of a Traefik TLS Option, allowing to configure some parameters of the TLS connection.
    More info: https://doc.traefik.io/traefik/v3.0/https/tls/#tls-options

    Attributes
    ----------
    apiVersion : str, default is "traefik.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TLSOption", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, required
        metadata
    spec : TraefikIoV1alpha1TLSOptionSpec, default is Undefined, required
        spec
    """


    apiVersion: "traefik.io/v1alpha1" = "traefik.io/v1alpha1"

    kind: "TLSOption" = "TLSOption"

    metadata: v1.ObjectMeta

    spec: TraefikIoV1alpha1TLSOptionSpec


schema TraefikIoV1alpha1TLSOptionSpec:
    """
    TLSOptionSpec defines the desired state of a TLSOption.

    Attributes
    ----------
    alpnProtocols : [str], default is Undefined, optional
        ALPNProtocols defines the list of supported application level protocols for the TLS handshake, in order of preference.
        More info: https://doc.traefik.io/traefik/v3.0/https/tls/#alpn-protocols
    cipherSuites : [str], default is Undefined, optional
        CipherSuites defines the list of supported cipher suites for TLS versions up to TLS 1.2.
        More info: https://doc.traefik.io/traefik/v3.0/https/tls/#cipher-suites
    clientAuth : TraefikIoV1alpha1TLSOptionSpecClientAuth, default is Undefined, optional
        client auth
    curvePreferences : [str], default is Undefined, optional
        CurvePreferences defines the preferred elliptic curves in a specific order.
        More info: https://doc.traefik.io/traefik/v3.0/https/tls/#curve-preferences
    maxVersion : str, default is Undefined, optional
        MaxVersion defines the maximum TLS version that Traefik will accept.
        Possible values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13.
        Default: None.
    minVersion : str, default is Undefined, optional
        MinVersion defines the minimum TLS version that Traefik will accept.
        Possible values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13.
        Default: VersionTLS10.
    preferServerCipherSuites : bool, default is Undefined, optional
        PreferServerCipherSuites defines whether the server chooses a cipher suite among his own instead of among the client's.
        It is enabled automatically when minVersion or maxVersion is set.
        Deprecated: https://github.com/golang/go/issues/45430
    sniStrict : bool, default is Undefined, optional
        SniStrict defines whether Traefik allows connections from clients connections that do not specify a server_name extension.
    """


    alpnProtocols?: [str]

    cipherSuites?: [str]

    clientAuth?: TraefikIoV1alpha1TLSOptionSpecClientAuth

    curvePreferences?: [str]

    maxVersion?: str

    minVersion?: str

    preferServerCipherSuites?: bool

    sniStrict?: bool


schema TraefikIoV1alpha1TLSOptionSpecClientAuth:
    """
    ClientAuth defines the server's policy for TLS Client Authentication.

    Attributes
    ----------
    clientAuthType : str, default is Undefined, optional
        ClientAuthType defines the client authentication type to apply.
    secretNames : [str], default is Undefined, optional
        SecretNames defines the names of the referenced Kubernetes Secret storing certificate details.
    """


    clientAuthType?: "NoClientCert" | "RequestClientCert" | "RequireAnyClientCert" | "VerifyClientCertIfGiven" | "RequireAndVerifyClientCert"

    secretNames?: [str]


